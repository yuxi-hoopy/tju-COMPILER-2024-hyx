1    # # int   move
2    int # Ident   reduction
3    bType # Ident   move
4    Ident # =   move
5    = # IntConst   move
6    IntConst # ;   reduction
7    number # ;   reduction
8    primaryExp # ;   reduction
9    unaryExp # ;   reduction
10    mulExpAtom # ;   reduction
11    mulExp # ;   reduction
12    addExpAtom # ;   reduction
13    addExp # ;   reduction
14    exp # ;   reduction
15    initVal # ;   reduction
16    varDef # ;   reduction
17    argVarDecl # ;   move
18    ; # int   reduction
19    varDecl # int   reduction
20    decl # int   move
21    int # Ident   reduction
22    bType # Ident   move
23    Ident # =   move
24    = # IntConst   move
25    IntConst # ;   reduction
26    number # ;   reduction
27    primaryExp # ;   reduction
28    unaryExp # ;   reduction
29    mulExpAtom # ;   reduction
30    mulExp # ;   reduction
31    addExpAtom # ;   reduction
32    addExp # ;   reduction
33    exp # ;   reduction
34    initVal # ;   reduction
35    varDef # ;   reduction
36    argVarDecl # ;   move
37    ; # void   reduction
38    varDecl # void   reduction
39    decl # void   move
40    void # Ident   reduction
41    funcType # Ident   move
42    Ident # (   move
43    ( # )   reduction
44    funcFParams # )   move
45    ) # {   move
46    { # int   move
47    int # Ident   reduction
48    bType # Ident   move
49    Ident # =   move
50    = # IntConst   move
51    IntConst # ;   reduction
52    number # ;   reduction
53    primaryExp # ;   reduction
54    unaryExp # ;   reduction
55    mulExpAtom # ;   reduction
56    mulExp # ;   reduction
57    addExpAtom # ;   reduction
58    addExp # ;   reduction
59    exp # ;   reduction
60    initVal # ;   reduction
61    varDef # ;   reduction
62    argVarDecl # ;   move
63    ; # return   reduction
64    varDecl # return   reduction
65    decl # return   move
66    return # Ident   move
67    Ident # +   reduction
68    lVal # +   reduction
69    primaryExp # +   reduction
70    unaryExp # +   reduction
71    mulExpAtom # +   reduction
72    mulExp # +   move
73    + # Ident   move
74    Ident # ;   reduction
75    lVal # ;   reduction
76    primaryExp # ;   reduction
77    unaryExp # ;   reduction
78    mulExpAtom # ;   reduction
79    mulExp # ;   reduction
80    addExpAtom # ;   reduction
81    addExpAtom # ;   reduction
82    addExp # ;   reduction
83    exp # ;   reduction
84    argExp # ;   move
85    ; # }   reduction
86    stmt # }   reduction
87    blockItem # }   reduction
88    blockItem # }   reduction
89    blockItem # }   move
90    } # #   reduction
91    block # #   reduction
92    funcDef # #   reduction
93    compUnit # #   reduction
94    compUnit # #   reduction
95    compUnit # #   reduction
accept
PS E:\compiler\语法分析SLR> g++ grammer.c++ -o grammer
PS E:\compiler\语法分析SLR> ./grammer
1    # # int   move
2    int # Ident   reduction
3    bType # Ident   move
4    Ident # =   move
5    = # IntConst   move
6    IntConst # ,   reduction
7    number # ,   reduction
8    primaryExp # ,   reduction
9    unaryExp # ,   reduction
10    mulExpAtom # ,   reduction
11    mulExp # ,   reduction
12    addExpAtom # ,   reduction
13    addExp # ,   reduction
14    exp # ,   reduction
15    initVal # ,   reduction
16    varDef # ,   move
17    , # Ident   move
18    Ident # =   move
19    = # IntConst   move
20    IntConst # ,   reduction
21    number # ,   reduction
22    primaryExp # ,   reduction
23    unaryExp # ,   reduction
24    mulExpAtom # ,   reduction
25    mulExp # ,   reduction
26    addExpAtom # ,   reduction
27    addExp # ,   reduction
28    exp # ,   reduction
29    initVal # ,   reduction
30    varDef # ,   move
31    , # Ident   move
32    Ident # =   move
33    = # IntConst   move
34    IntConst # ;   reduction
35    number # ;   reduction
36    primaryExp # ;   reduction
37    unaryExp # ;   reduction
38    mulExpAtom # ;   reduction
39    mulExp # ;   reduction
40    addExpAtom # ;   reduction
41    addExp # ;   reduction
42    exp # ;   reduction
43    initVal # ;   reduction
44    varDef # ;   reduction
45    argVarDecl # ;   reduction
46    argVarDecl # ;   reduction
47    argVarDecl # ;   move
48    ; # void   reduction
49    varDecl # void   reduction
50    decl # void   move
51    void # Ident   reduction
52    funcType # Ident   move
53    Ident # (   move
54    ( # )   reduction
55    funcFParams # )   move
56    ) # {   move
57    { # int   move
58    int # Ident   reduction
59    bType # Ident   move
60    Ident # =   move
61    = # IntConst   move
62    IntConst # ;   reduction
63    number # ;   reduction
64    primaryExp # ;   reduction
65    unaryExp # ;   reduction
66    mulExpAtom # ;   reduction
67    mulExp # ;   reduction
68    addExpAtom # ;   reduction
69    addExp # ;   reduction
70    exp # ;   reduction
71    initVal # ;   reduction
72    varDef # ;   reduction
73    argVarDecl # ;   move
74    ; # return   reduction
75    varDecl # return   reduction
76    decl # return   move
77    return # Ident   move
78    Ident # +   reduction
79    lVal # +   reduction
80    primaryExp # +   reduction
81    unaryExp # +   reduction
82    mulExpAtom # +   reduction
83    mulExp # +   move
84    + # Ident   move
85    Ident # ;   reduction
86    lVal # ;   reduction
87    primaryExp # ;   reduction
88    unaryExp # ;   reduction
89    mulExpAtom # ;   reduction
90    mulExp # ;   reduction
91    addExpAtom # ;   reduction
92    addExpAtom # ;   reduction
93    addExp # ;   reduction
94    exp # ;   reduction
95    argExp # ;   move
96    ; # }   reduction
97    stmt # }   reduction
98    blockItem # }   reduction
99    blockItem # }   reduction
100    blockItem # }   move
101    } # #   reduction
102    block # #   reduction
103    funcDef # #   reduction
104    compUnit # #   reduction
105    compUnit # #   reduction
accept